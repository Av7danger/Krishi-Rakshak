version: "3.9"
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: krishi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d krishi"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 10

  create-bucket:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: ["/bin/sh","-c"]
    command: >
      "mc alias set local http://minio:9000 minioadmin minioadmin && mc mb -p local/uploads || true"

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env.example
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@postgres:5432/krishi
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      create-bucket:
        condition: service_completed_successfully

  worker:
    build:
      context: .
      dockerfile: dockerfile.worker
    env_file: .env.example
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@postgres:5432/krishi
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
